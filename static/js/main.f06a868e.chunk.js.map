{"version":3,"sources":["Components/Header.tsx","Components/HomePage.tsx","api.js","Components/PersonRow.tsx","Components/PeopleTable.tsx","Components/PeoplePage.tsx","Components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","to","HomePage","getPeople","fetch","then","response","json","a","allPeople","peopleWithParents","map","person","mother","find","motherName","name","father","fatherName","PersonRow","className","sex","born","died","PeopleTable","people","length","key","slug","PeoplePage","useState","setPeople","useEffect","getPeopleWithParents","NotFoundPage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,EAAmB,kBAC9B,6BACE,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,aAIF,6BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,eAIF,6BACE,kBAAC,IAAD,CAAMA,GAAG,KAAT,mBCdOC,EAAqB,kBAChC,yC,yCCHF,SAASC,IAIP,OAHgBC,MAAM,qEACnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,4CAKxB,8BAAAC,EAAA,sEACmBL,IADnB,cACCM,EADD,OAGCC,EAAoBD,EACvBE,KAAI,SAAAC,GAAM,kCACNA,GADM,IAETC,OAAQJ,EAAUK,MAAK,SAAAD,GAAM,OAAID,EAAOG,aAAeF,EAAOG,QAC9DC,OAAQR,EAAUK,MAAK,SAAAG,GAAM,OAAIL,EAAOM,aAAeD,EAAOD,aAP7D,kBAUEN,GAVF,4C,sBCAA,IAAMS,EAA6B,SAAC,GAAD,IAAGP,EAAH,EAAGA,OAAH,OACxC,wBAAIQ,UAAU,UACZ,4BAAKR,EAAOI,MACZ,4BAAoB,MAAfJ,EAAOS,IAAc,SAAW,QACrC,4BAAKT,EAAOU,MACZ,4BAAKV,EAAOW,MACZ,4BAAKX,EAAOG,YAAc,aAC1B,4BAAKH,EAAOM,YAAc,eCNjBM,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,2BAAOL,UAAU,eACf,+BACE,4BACE,oCACA,mCACA,oCACA,oCACA,0CACA,4CAGJ,+BACGK,EAAOC,QAAUD,EAAOd,KAAI,SAAAC,GAAM,OACjC,kBAAC,EAAD,CACEe,IAAKf,EAAOgB,KACZhB,OAAQA,UCpBLiB,EAAsB,WAAO,IAAD,EACXC,mBAAS,IADE,mBAChCL,EADgC,KACxBM,EADwB,KAQvC,OALAC,qBAAU,YHAL,WAAP,gCGCIC,GACG5B,KAAK0B,KACP,IAGD,oCACE,2CACA,kBAAC,EAAD,CAAaN,OAAQA,MCbdS,EAAyB,kBACpC,6CC0BaC,G,MAjBO,kBACpB,yBAAKf,UAAU,OACb,4CACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgB,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUA,KAAK,QAAQnC,GAAG,MAC1B,kBAAC,EAAD,UClBNqC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f06a868e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Header: React.FC = () => (\n  <nav>\n    <div>\n      <Link to=\"/\">\n        HomePage\n      </Link>\n    </div>\n    <div>\n      <Link to=\"/people\">\n        PeoplePage\n      </Link>\n    </div>\n    <div>\n      <Link to=\"/\">\n        NotFoundPage\n      </Link>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h2>HomePage</h2>\n);\n","function getPeople() {\n  const request = fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json());\n\n  return request;\n}\n\nexport async function getPeopleWithParents() {\n  const allPeople = await getPeople();\n\n  const peopleWithParents = allPeople\n    .map(person => ({\n      ...person,\n      mother: allPeople.find(mother => person.motherName === mother.name),\n      father: allPeople.find(father => person.fatherName === father.name),\n    }));\n\n  return peopleWithParents;\n}\n","import React from 'react';\nimport { Person } from './Types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr className=\"person\">\n    <td>{person.name}</td>\n    <td>{person.sex === 'f' ? 'Female' : 'Male'}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.motherName || 'undefined'}</td>\n    <td>{person.fatherName || 'undefined'}</td>\n  </tr>\n);\n","import React from 'react';\nimport { PersonRow } from './PersonRow';\nimport { Person } from './Types';\n\ninterface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table className=\"peopleTable\">\n    <thead>\n      <tr>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>motherName</th>\n        <th>fatherName</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.length && people.map(person => (\n        <PersonRow\n          key={person.slug}\n          person={person}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPeopleWithParents } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage:React.FC = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeopleWithParents()\n      .then(setPeople);\n  }, []);\n\n  return (\n    <>\n      <h2>People Page</h2>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h2>NotFoundPage</h2>\n);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Header } from './Components/Header';\nimport { HomePage } from './Components/HomePage';\nimport { PeoplePage } from './Components/PeoplePage';\nimport { NotFoundPage } from './Components/NotFoundPage';\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <h1>People table</h1>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/people\">\n        <PeoplePage />\n      </Route>\n      <Redirect path=\"/home\" to=\"/\" />\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}